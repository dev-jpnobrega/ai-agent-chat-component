{"version":3,"names":["FetchRequestError","Error","constructor","originalError","detailedError","cause","message","code","name","super","this","originalStack","stack","configureTimeout","timeout","abortController","AbortController","timeoutId","signal","setTimeout","abort","tryParseJSON","value","JSON","parse","error","async","formatResponse","response","returnStream","body","text","responseHeaders","Array","from","headers","keys","forEach","key","get","formattedResponse","ok","statusCode","status","statusText","Promise","reject","fetchRequest","options","abortSignal","reqHeaders","Object","assign","uri","URL","params","searchParams","append","fetch","stringify","clearTimeout","fetchRequestError","console","details","AIEnterpriseService","settings","getAgent","agentIdentify","result","method","xApiKey","url","sendMessage","sendMessageBody","enTranslations","ptBrTranslations","translations","en","TranslationUtils","fetchTranslations","lang","existingTranslations","sessionStorage","getItem","length","translateSelected","setItem","exception","undefined","idGeneration","Math","random","toString","substring","chatComponentCss","ChatComponentStyle0","Message","agent","content","date","sender","loading","dateFormart","getHours","getMinutes","MessageUser","h","class","innerHTML","_a","replace","MessageAI","src","urlImg","Messages","messages","map","service","ChatComponent","renderMessages","Agent","messagesContainer","componentWillLoad","chatUid","messageID","language","sendBody","id","agentUid","identifier","userId","context","greetings","receiver","emit","Date","warn","disableSend","componentDidRender","onScroll","sendHandler","event","detail","then","catch","receiverHandler","filter","item","handleKeyDown","ev","handleSend","preventDefault","send","handleChange","target","_e","scrollTo","top","scrollHeight","behavior","render","_b","description","_c","ref","el","typeof","onInput","placeholder","disabled","type","onClick","e"],"sources":["src/helpers/fetch-request.ts","src/service/ai-enterprise.service.ts","src/assets/translate/en.ts","src/assets/translate/pt-br.ts","src/helpers/translation.ts","src/helpers/helpers.ts","src/components/chat-component/chat-component.scss?tag=chat-component&encapsulation=shadow","src/components/chat-component/chat-component.tsx"],"sourcesContent":["class FetchRequestError extends Error {\n  code: any;\n  originalStack: any;\n\n  constructor(originalError) {\n    const detailedError = originalError.cause\n      ? originalError.cause\n      : originalError;\n\n    let { message, code } = detailedError;\n\n    if (originalError.name === 'AbortError') {\n      message = 'Request timeout';\n      code = 'ETIMEDOUT';\n    }\n\n    super(message);\n\n    this.name = detailedError.name;\n    this.code = code;\n    this.originalStack = detailedError.stack;\n  }\n}\n\nfunction configureTimeout({ timeout, abortController = new AbortController() }) {\n  let timeoutId = null;\n  const { signal } = abortController;\n\n  if (timeout) {\n    timeoutId = setTimeout(() => {\n      abortController.abort();\n    }, timeout);\n  }\n\n  return { signal, timeoutId };\n}\n\n\nfunction tryParseJSON(value) {\n  try {\n    return JSON.parse(value);\n  } catch (error) {\n    return value;\n  }\n};\n\n\n/* eslint-disable-next-line max-lines-per-function */\nasync function formatResponse(response, returnStream) {\n  const body = returnStream\n    ? response.body\n    : tryParseJSON(await response.text());\n\n  const responseHeaders = {};\n\n  Array.from(response.headers.keys()).forEach((key: any) => {\n    responseHeaders[key] = response.headers.get(key);\n  });\n\n  const formattedResponse = {\n    body,\n    response: {\n      body,\n      headers: responseHeaders,\n      ok: response.ok,\n      statusCode: response.status,\n      statusText: response.statusText,\n    },\n  };\n\n  return response.ok\n    ? formattedResponse\n    : Promise.reject(formattedResponse);\n}\n\n/**\n * Sends a fetch request.\n *\n * @param {Object} options - The options for the fetch request.\n * @param {string} options.uri - The URI to request.\n * @param {Object} options.headers - The headers to include in the request.\n * @param {Object} options.body - The body of the request.\n * @param {Object} options.params - The query parameters to include in the request.\n * @param {boolean} returnStream - Whether to return the response body as a stream.\n * @returns {Promise<Object>} The response from the fetch request.\n *\n * @throws {Promise<Object>} If the fetch request fails, it throws a Promise\n *  that rejects with the response of a instance of FetchRequestError.\n */\n/* eslint-disable-next-line max-lines-per-function, max-statements */\nexport default async function fetchRequest(\n  options = {} as any,\n  returnStream = false,\n) {\n  try {\n    const abortSignal = configureTimeout(options);\n\n    const reqHeaders = {\n      'Content-Type': 'application/json',\n      ...options.headers,\n    };\n\n    const uri = new URL(options.uri);\n\n    const { params = {} } = options;\n\n    Object.keys(params).forEach((key) => {\n      uri.searchParams.append(key, params[key]);\n    });\n\n    const response = await fetch(uri, {\n      ...options,\n      body: JSON.stringify(options.body),\n      headers: reqHeaders,\n      signal: abortSignal.signal,\n    });\n\n    clearTimeout(abortSignal.timeoutId);\n\n    return formatResponse(response, returnStream);\n  } catch (error) {\n    const fetchRequestError = new FetchRequestError(error);\n\n    console.error({\n      details: fetchRequestError,\n      error: fetchRequestError.name,\n      message: `[COMMONS-FETCH-REQUEST]-ERROR: ${fetchRequestError.name} - ${fetchRequestError.message}`,\n    });\n\n    throw fetchRequestError;\n  }\n};\n","import fetchRequest from '../helpers/fetch-request';\n\ninterface SettingsService {\n  url: string;\n  xApiKey: string;\n}\n\nexport type Agent = {\n  id: string;\n  name: string;\n  description: string;\n  urlImg: string;\n};\n\nexport interface SendMessageBody {\n  id: string;\n  agentUid: string;\n  userId: string;\n  context: string;\n  messages: { id: string; content: string }[];\n}\n\nexport class AIEnterpriseService {\n  settings: SettingsService;\n\n  constructor(settings: SettingsService) {\n    this.settings = settings;\n  }\n\n  async getAgent(agentIdentify: string): Promise<Agent> {\n    try {\n      const result = await fetchRequest({\n        method: `GET`,\n        headers: {\n          'x-api-key': this.settings.xApiKey,\n        },\n        uri: `${this.settings.url}/workout/v1/agent/${agentIdentify}`,\n      });\n\n      return result.body;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async sendMessage(sendMessageBody: SendMessageBody): Promise<string> {\n    try {\n      const result = await fetchRequest({\n        method: `POST`,\n        uri: `${this.settings.url}/workout/v1/chat`,\n        body: {\n          body: {\n            ...sendMessageBody,\n          },\n        },\n      });\n\n      return result.body;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n","export default {\n  'button.send': 'Send',\n  'text.placeholder': 'Type your message here...',\n};\n","export default {\n  'button.send': 'Enviar',\n  'text.placeholder': 'Digite uma mensagem...',\n};\n","import enTranslations from '../assets/translate/en';\nimport ptBrTranslations from '../assets/translate/pt-br';\n\nconst translations = {\n  'en': enTranslations,\n  'pt-br': ptBrTranslations,\n};\n\nclass TranslationUtils {\n  static async fetchTranslations(lang: string = `en`): Promise<any> {\n    const existingTranslations = JSON.parse(sessionStorage.getItem(`i18n.${lang}`));\n\n    if (existingTranslations && Object.keys(existingTranslations).length > 0) {\n      return existingTranslations;\n    }\n\n    try {\n      const translateSelected = translations[lang];\n      sessionStorage.setItem(`i18n.${lang}`, JSON.stringify(translateSelected));\n      return translateSelected;\n    } catch (exception) {\n      console.error(`Error loading locale: ${lang}`, exception);\n\n      return undefined;\n    }\n  }\n}\n\nexport default TranslationUtils;\n","export function format(first: string, middle: string, last: string): string {\n  return (first || '') + (middle ? ` ${middle}` : '') + (last ? ` ${last}` : '');\n}\n\nexport function idGeneration(): string {\n  return Math.random().toString(36).substring(7);\n}\n","/*--------------------\nMixins\n--------------------*/\n@mixin center {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n@mixin ball {\n  @include center;\n  content: '';\n  display: block;\n  width: 3px;\n  height: 3px;\n  border-radius: 50%;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 2;\n  margin-top: 4px;\n  animation: ball .45s cubic-bezier(0, 0, 0.15, 1) alternate infinite;\n}\n\n\n/*--------------------\nBody\n--------------------*/\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\nhtml, body {\n  height: 100%;\n  margin: 0;\n}\n\nbody {\n  background: linear-gradient(135deg, #044f48, #2a7561);\n  background-size: cover;\n  font-family:  'Segoe UI, Helvetica Neue, Helvetica, Lucida Grande, Arial, Ubuntu, Cantarell, Fira Sans', sans-serif;\n  font-size: 12px;\n  line-height: 1.3;\n  overflow: hidden;\n}\n\n.bg {\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  filter: blur(80px);\n  transform: scale(1.2);\n}\n\n\n/*--------------------\nChat\n--------------------*/\n.chat {\n  font-family:  'Segoe UI, Helvetica Neue, Helvetica, Lucida Grande, Arial, Ubuntu, Cantarell, Fira Sans', sans-serif;\n  @include center;\n  min-height: 100%;\n  min-width: 100%;\n  overflow: hidden;\n  box-shadow: 0 5px 30px rgba(0, 0, 0, .2);\n  background: url('https://cloudfronttestebucket.s3.amazonaws.com/bg.png') repeat 0 0;\n  border-radius: 20px;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n}\n\n\n/*--------------------\nChat Title\n--------------------*/\n.chat-title {\n  flex: 0 1 45px;\n  position: relative;\n  z-index: 2;\n  background: #F0F2F5;\n  color: #000;\n  text-align: left;\n  padding: 15px 10px 10px 67px;\n  margin-bottom: 10px;\n  \n  h1, h2 {\n    font-weight: normal;\n    font-size: 15px;\n    margin: 0;\n    padding: 1px;\n  }\n  \n  h2 {\n    color: rgb(99, 95, 95);\n    font-size: 13px;\n    margin-top: 1px;\n  }\n  \n  .avatar {\n    position: absolute;\n    z-index: 1;\n    top: 8px;\n    left: 9px;\n    border-radius: 30px;\n    width: 50px;\n    height: 50px;\n    overflow: hidden;\n    margin: 0;\n    padding: 0;\n    border: 2px solid rgba(255, 255, 255, 0.24);\n    \n    img {\n      width: 100%;\n      height: 100%;\n    }\n  }\n}\n\n\n/*--------------------\nMessages\n--------------------*/\n.messages {\n  flex: 1 1 auto;\n  overflow: auto;\n  position: relative;\n  width: 100%;\n  \n  & .messages-content {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 101%;\n    width: 100%;\n  }\n\n  \n  .message {\n    clear: both;\n    float: left;\n    padding: 6px 10px 7px;\n    border-radius: 10px 10px 10px 0;\n    background: rgb(255, 255, 255);\n    margin: 8px 0;\n    font-size: 11px;\n    line-height: 1.4;\n    margin-left: 35px;\n    position: relative;\n    \n    .timestamp {\n      float: right;\n      align-content: end;\n      bottom: -15px;\n      font-size: 9px;\n      z-index: 3;\n      color: rgba(2, 2, 2, 0.3);\n    }\n    \n    &::before {\n      content: '';\n      position: absolute;\n      bottom: -6px;\n      border-top: 6px solid rgb(255, 255, 255);\n      left: 0;\n      border-right: 7px solid transparent;\n    }\n    \n    .avatar {\n      position: absolute;\n      z-index: 1;\n      bottom: -15px;\n      left: -35px;\n      border-radius: 30px;\n      width: 30px;\n      height: 30px;\n      overflow: hidden;\n      margin: 0;\n      padding: 0;\n\n      img {\n        width: 100%;\n        height: 90%;\n      }\n    }\n    \n    &.message-personal {\n      float: right;\n      text-align: right;\n      background: linear-gradient(120deg, #E1F6CA, #E1F6CA);\n      border-radius: 10px 10px 0 10px;\n      \n      &::before {\n        left: auto;\n        right: 0;\n        border-right: none;\n        border-left: 5px solid transparent;\n        border-top: 4px solid #E1F6CA;\n        bottom: -4px;\n      }\n    }\n    \n    &:last-child {\n      margin-bottom: 30px;\n    }\n    \n    &.new {\n      transform: scale(0);\n      transform-origin: 0 0;\n      animation: bounce 500ms linear both;\n    }\n    \n    &.loading {\n\n      &::before {\n        @include ball;\n        border: none;\n        animation-delay: .15s;\n      }\n\n      & span {\n        display: block;\n        font-size: 0;\n        width: 20px;\n        height: 10px;\n        position: relative;\n\n        &::before {\n          @include ball;\n          margin-left: -7px;\n        }\n\n        &::after {\n          @include ball;\n          margin-left: 7px;\n          animation-delay: .3s;\n        }\n      }\n    }\n    \n  }\n}\n\n\n/*--------------------\nMessage Box\n--------------------*/\n.message-box {\n  flex: 0 1 40px;\n  width: 100%;\n  background: #F0F2F5;\n  padding: 10px;\n  position: relative;\n  \n  & .message-input {\n    background: none;\n    border: none;\n    outline: none!important;\n    resize: none;\n    color: rgb(12, 12, 12);\n    font-size: 11px;\n    height: 17px;\n    margin: 0;\n    padding-right: 20px;\n    width: 265px;\n  }\n  \n  textarea:focus:-webkit-placeholder{\n      color: transparent;\n  }\n  \n  & .message-submit {\n    position: absolute;\n    z-index: 1;\n    top: 9px;\n    right: 10px;\n    color: #fff;\n    border: none;\n    background: #248A52;\n    font-size: 10px;\n    text-transform: uppercase;\n    line-height: 1;\n    padding: 6px 10px; \n    border-radius: 10px;\n    outline: none!important;\n    transition: background .2s ease;\n    \n    &:hover {\n      background: #1D7745;\n    }\n  }\n\n  & .message-submit:disabled {\n    position: absolute;\n    z-index: 1;\n    top: 9px;\n    right: 10px;\n    color: #fff;\n    border: none;\n    background: #CCCCCC;\n    font-size: 10px;\n    text-transform: uppercase;\n    line-height: 1;\n    padding: 6px 10px; \n    border-radius: 10px;\n  }\n}\n\n\n/*--------------------\nCustom Srollbar\n--------------------*/\n/* width */\n::-webkit-scrollbar {\n  width: 0.3em;\n  opacity: 0;\n}\n\n/* Track */\n::-webkit-scrollbar-track {\n  box-shadow: inset 0 0 5px #F0F2F5; \n  opacity: 0;\n}\n \n/* Handle */\n::-webkit-scrollbar-thumb {\n  background-color: rgba(192, 185, 185, 0.5)!important;\n  opacity: 0;\n}\n\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background-color: rgba(192, 185, 185, 0.5)!important;\n  margin: 1px -3px 1px 0;\n  opacity: 0;\n}\n\n.mCSB_scrollTools {\n  margin: 1px -3px 1px 0;\n  opacity: 0;\n}\n\n.mCSB_inside > .mCSB_container {\n  margin-right: 0px;\n  padding: 0 10px;\n}\n\n.mCSB_scrollTools .mCSB_dragger .mCSB_dragger_bar {\n  background-color: rgba(192, 185, 185, 0.5)!important;\n}\n\n\n/*--------------------\nBounce\n--------------------*/\n@keyframes bounce { \n  0% { transform: matrix3d(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  4.7% { transform: matrix3d(0.45, 0, 0, 0, 0, 0.45, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  9.41% { transform: matrix3d(0.883, 0, 0, 0, 0, 0.883, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  14.11% { transform: matrix3d(1.141, 0, 0, 0, 0, 1.141, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  18.72% { transform: matrix3d(1.212, 0, 0, 0, 0, 1.212, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  24.32% { transform: matrix3d(1.151, 0, 0, 0, 0, 1.151, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  29.93% { transform: matrix3d(1.048, 0, 0, 0, 0, 1.048, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  35.54% { transform: matrix3d(0.979, 0, 0, 0, 0, 0.979, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  41.04% { transform: matrix3d(0.961, 0, 0, 0, 0, 0.961, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  52.15% { transform: matrix3d(0.991, 0, 0, 0, 0, 0.991, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  63.26% { transform: matrix3d(1.007, 0, 0, 0, 0, 1.007, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  85.49% { transform: matrix3d(0.999, 0, 0, 0, 0, 0.999, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  100% { transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); } \n}\n\n\n@keyframes ball { \n  from {\n    transform: translateY(0) scaleY(.8);\n  }\n  to {\n    transform: translateY(-10px);\n  }\n}\n","import { Event, Component, FunctionalComponent, Prop, h, EventEmitter, Listen, State } from '@stencil/core';\nimport { AIEnterpriseService, SendMessageBody, Agent } from '../../service/ai-enterprise.service';\nimport TranslationUtils from '../../helpers/translation';\nimport { idGeneration } from '../../helpers/helpers';\n\n\ninterface MessagesProps {\n  agent: Agent;\n  messages: Message[];\n}\n\ninterface Message {\n  id?: string;\n  content?: string;\n  date: Date;\n  sender: `AI` | `USER`;\n  loading: boolean;\n  agent: Agent;\n}\n\nconst Message: FunctionalComponent<Message> = ({ agent, content, date, sender, loading }) => { \n  const dateFormart = date.getHours() + ':' + date.getMinutes();\n\n  const MessageUser = (message: Message) => {\n    return (\n      <div class=\"message message-personal new\">\n        <div innerHTML={ message.content?.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>') || '' }><span/></div>\n        <div class=\"timestamp\">{dateFormart}</div>\n      </div>\n    )\n  }\n\n  const MessageAI = (message: Message) => {\n    return (\n      <div class={`message ${!message.loading || `loading`} new`}>\n        <figure class=\"avatar\">\n          <img src={ agent?.urlImg || 'https://cloudfronttestebucket.s3.amazonaws.com/agent.jpg'} />\n        </figure>\n        <div innerHTML={ message.content?.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>') || '' }><span/></div>\n        <div class=\"timestamp\">{dateFormart}</div>\n      </div>\n    )\n  }\n\n  return sender === `AI` ? \n    MessageAI({ agent, content, date, sender, loading }) : \n    MessageUser({ agent, content, date, sender, loading });\n};\n\nconst Messages: FunctionalComponent<MessagesProps> = ({ agent, messages }) => { \n  return (\n    <div class='messages-content'>\n      { messages.map((message) => (\n        <Message \n          agent={agent} \n          content={message.content} \n          date={message.date} \n          sender={message.sender} \n          loading={message.loading} />\n      ))}\n    </div>\n  )\n};\n\nconst service = new AIEnterpriseService({\n  url: 'https://ai-enterprise-api.azurewebsites.net',\n  xApiKey: 'my-key',\n});\n\n@Component({\n  tag: 'chat-component',\n  styleUrl: 'chat-component.scss',\n  shadow: true,\n})\nexport class ChatComponent {\n  /**\n   * The greetings\n   */\n  @Prop() greetings: string;\n  /**\n   * The Agent identifier\n   */\n  @Prop() identifier: string;\n  /**\n   * The Chat identifier\n   */\n  @Prop() chatUid?: string;\n  /**\n   * The Initial Context chat\n   */\n  @Prop() context?: string;\n  /**\n   * The language\n   */\n  @Prop() language?: string;\n  /**\n   * Event emitted when a message is sent.\n   * \n   * @event send\n   */\n  @Event() send: EventEmitter;\n  /**\n   * Event emitter for the receiver event.\n   * This event is triggered when a message is received.\n   *\n   * @event receiver\n   */\n  @Event() receiver: EventEmitter;\n\n  @State() translations: any;\n  @State() messages: Message[] = [];\n  @State() content: string = '';\n  @State() disableSend: boolean = true;\n  @State() Agent: Agent; \n\n  async componentWillLoad() {\n    this.chatUid = this.chatUid || idGeneration();\n    const messageID =  idGeneration();\n\n    this.translations = await TranslationUtils.fetchTranslations(this.language);\n\n    const sendBody: SendMessageBody = {\n      id: this.chatUid,\n      agentUid: this.identifier,\n      userId: this.chatUid,\n      context: this.context || '',\n      messages: [{ id: messageID, content: this.greetings || 'Hi' }],\n    }\n\n    this.receiver.emit({\n      id: messageID,\n      content: undefined,\n      date: new Date(),\n      loading: true,\n      sender: 'AI'\n    });\n\n    if (!this.Agent?.name) {\n      this.Agent = await service.getAgent(this.identifier);\n    }\nconsole.warn('this.Agent', this.Agent);\n    const response = await service.sendMessage(sendBody);\n\n    this.receiver.emit({\n      id: messageID,\n      content: response,\n      date: new Date(),\n      loading: false,\n      sender: 'AI'\n    });\n\n    this.disableSend = false;\n  }\n\n  componentDidRender() {\n    this.onScroll(null);\n  }\n\n  @Listen('send')\n  sendHandler(event: CustomEvent<Message>) {\n    const message = event.detail as any;\n    \n    this.disableSend = true;\n\n    this.receiver.emit({\n      ...message,\n    });\n\n    const messageID = idGeneration();\n\n    this.receiver.emit({\n      id: messageID,\n      date: new Date(),\n      loading: true,\n      sender: 'AI'\n    });\n  \n    const sendBody: SendMessageBody = {\n      id: this.chatUid,\n      agentUid: this.identifier,\n      userId: this.chatUid,\n      context: this.context || '',\n      messages: [{id: messageID, ...message}],\n    }\n\n    service.sendMessage(sendBody)\n      .then((response) => {\n        this.receiver.emit({\n          id: messageID,\n          content: response,\n          date: new Date(),\n          loading: false,\n          sender: 'AI'\n        });\n\n        this.disableSend = false;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  @Listen('receiver')\n  receiverHandler(event: CustomEvent<Message>) {\n    const message = event.detail;\n\n    this.messages = [\n      ...this.messages.filter(item => item.id !== message.id), \n      message,\n    ];\n  }\n\n  @Listen('keydown')\n  handleKeyDown(ev: KeyboardEvent){\n    if (ev.key === 'Enter' && !this.disableSend){\n      this.handleSend(ev);\n    }\n  }\n\n  handleSend(event: Event) {\n    event.preventDefault();\n\n    if (!this.content) return;\n\n    this.send.emit({\n      id: idGeneration(),\n      content: this.content,\n      date: new Date(),\n      loading: false,\n      sender: 'USER'\n    });\n\n    this.content = '';\n  }\n\n  handleChange(event: Event) { \n    this.content = (event.target as HTMLInputElement).value;    \n  }\n\n  renderMessages = (messages: Message[]) => {\n    return (\n      <Messages messages={messages} agent={this.Agent} />\n    )\n  }\n\n  private messagesContainer: HTMLDivElement = null;\n  \n  onScroll(_e) {\n    if (this.messagesContainer) {\n      this.messagesContainer.scrollTo({\n        top: this.messagesContainer.scrollHeight,\n        behavior: 'smooth'\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div class='chat'>\n        <div class='chat-title'>\n          <h1>{ this.Agent?.name || 'BOT' }</h1>\n          <h2>{ this.Agent?.description || 'IA Assistent' }</h2>\n          <figure class='avatar'>\n            <img src={ this.Agent?.urlImg || 'https://cloudfronttestebucket.s3.amazonaws.com/agent.jpg' } />\n          </figure>\n        </div>\n        <div class='messages' ref={ el => this.messagesContainer = el }>\n          { this.renderMessages(this.messages) }\n        </div>\n        <div class='message-box'>\n          <textarea\n            typeof='text'\n            value={ this.content } \n            onInput={ (event) => this.handleChange(event) } \n            class='message-input' \n            placeholder={ (this.translations) ? this.translations['text.placeholder'] : 'Digite sua mensagem ...' }>\n          </textarea>\n          <button disabled={ this.disableSend } type='submit' class='message-submit' onClick={ (e) => this.handleSend(e) }>\n            { (this.translations) ? this.translations['button.send'] : 'Enviar' }\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n"],"mappings":"kDAAA,MAAMA,UAA0BC,MAI9B,WAAAC,CAAYC,GACV,MAAMC,EAAgBD,EAAcE,MAChCF,EAAcE,MACdF,EAEJ,IAAIG,QAAEA,EAAOC,KAAEA,GAASH,EAExB,GAAID,EAAcK,OAAS,aAAc,CACvCF,EAAU,kBACVC,EAAO,W,CAGTE,MAAMH,GAENI,KAAKF,KAAOJ,EAAcI,KAC1BE,KAAKH,KAAOA,EACZG,KAAKC,cAAgBP,EAAcQ,K,EAIvC,SAASC,GAAiBC,QAAEA,EAAOC,gBAAEA,EAAkB,IAAIC,kBACzD,IAAIC,EAAY,KAChB,MAAMC,OAAEA,GAAWH,EAEnB,GAAID,EAAS,CACXG,EAAYE,YAAW,KACrBJ,EAAgBK,OAAO,GACtBN,E,CAGL,MAAO,CAAEI,SAAQD,YACnB,CAGA,SAASI,EAAaC,GACpB,IACE,OAAOC,KAAKC,MAAMF,E,CAClB,MAAOG,GACP,OAAOH,C,CAEX,CAIAI,eAAeC,EAAeC,EAAUC,GACtC,MAAMC,EAAOD,EACTD,EAASE,KACTT,QAAmBO,EAASG,QAEhC,MAAMC,EAAkB,GAExBC,MAAMC,KAAKN,EAASO,QAAQC,QAAQC,SAASC,IAC3CN,EAAgBM,GAAOV,EAASO,QAAQI,IAAID,EAAI,IAGlD,MAAME,EAAoB,CACxBV,OACAF,SAAU,CACRE,OACAK,QAASH,EACTS,GAAIb,EAASa,GACbC,WAAYd,EAASe,OACrBC,WAAYhB,EAASgB,aAIzB,OAAOhB,EAASa,GACZD,EACAK,QAAQC,OAAON,EACrB,CAiBed,eAAeqB,EAC5BC,EAAU,GACVnB,EAAe,OAEf,IACE,MAAMoB,EAAcpC,EAAiBmC,GAErC,MAAME,EAAUC,OAAAC,OAAA,CACd,eAAgB,oBACbJ,EAAQb,SAGb,MAAMkB,EAAM,IAAIC,IAAIN,EAAQK,KAE5B,MAAME,OAAEA,EAAS,IAAOP,EAExBG,OAAOf,KAAKmB,GAAQlB,SAASC,IAC3Be,EAAIG,aAAaC,OAAOnB,EAAKiB,EAAOjB,GAAK,IAG3C,MAAMV,QAAiB8B,MAAML,EAAGF,OAAAC,OAAAD,OAAAC,OAAA,GAC3BJ,GAAO,CACVlB,KAAMP,KAAKoC,UAAUX,EAAQlB,MAC7BK,QAASe,EACThC,OAAQ+B,EAAY/B,UAGtB0C,aAAaX,EAAYhC,WAEzB,OAAOU,EAAeC,EAAUC,E,CAChC,MAAOJ,GACP,MAAMoC,EAAoB,IAAI7D,EAAkByB,GAEhDqC,QAAQrC,MAAM,CACZsC,QAASF,EACTpC,MAAOoC,EAAkBrD,KACzBF,QAAS,kCAAkCuD,EAAkBrD,UAAUqD,EAAkBvD,YAG3F,MAAMuD,C,CAEV,C,MC7GaG,EAGX,WAAA9D,CAAY+D,GACVvD,KAAKuD,SAAWA,C,CAGlB,cAAMC,CAASC,GACb,IACE,MAAMC,QAAerB,EAAa,CAChCsB,OAAQ,MACRlC,QAAS,CACP,YAAazB,KAAKuD,SAASK,SAE7BjB,IAAK,GAAG3C,KAAKuD,SAASM,wBAAwBJ,MAGhD,OAAOC,EAAOtC,I,CACd,MAAOL,GACPqC,QAAQrC,MAAMA,E,EAIlB,iBAAM+C,CAAYC,GAChB,IACE,MAAML,QAAerB,EAAa,CAChCsB,OAAQ,OACRhB,IAAK,GAAG3C,KAAKuD,SAASM,sBACtBzC,KAAM,CACJA,KAAIqB,OAAAC,OAAA,GACCqB,MAKT,OAAOL,EAAOtC,I,CACd,MAAOL,GACPqC,QAAQrC,MAAMA,E,GC3DpB,MAAAiD,EAAe,CACb,cAAe,OACf,mBAAoB,6BCFtB,MAAAC,EAAe,CACb,cAAe,SACf,mBAAoB,0BCCtB,MAAMC,EAAe,CACnBC,GAAMH,EACN,QAASC,GAGX,MAAMG,EACJ,8BAAaC,CAAkBC,EAAe,MAC5C,MAAMC,EAAuB1D,KAAKC,MAAM0D,eAAeC,QAAQ,QAAQH,MAEvE,GAAIC,GAAwB9B,OAAOf,KAAK6C,GAAsBG,OAAS,EAAG,CACxE,OAAOH,C,CAGT,IACE,MAAMI,EAAoBT,EAAaI,GACvCE,eAAeI,QAAQ,QAAQN,IAAQzD,KAAKoC,UAAU0B,IACtD,OAAOA,C,CACP,MAAOE,GACPzB,QAAQrC,MAAM,yBAAyBuD,IAAQO,GAE/C,OAAOC,S,YCnBGC,IACd,OAAOC,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAC9C,CCNA,MAAMC,EAAmB,koMACzB,MAAAC,EAAeD,ECmBf,MAAME,EAAwC,EAAGC,QAAOC,UAASC,OAAMC,SAAQC,cAC7E,MAAMC,EAAcH,EAAKI,WAAa,IAAMJ,EAAKK,aAEjD,MAAMC,EAAenG,I,MACnB,OACEoG,EAAA,OAAKC,MAAM,gCACTD,EAAA,OAAKE,YAAYC,EAAAvG,EAAQ4F,WAAO,MAAAW,SAAA,SAAAA,EAAEC,QAAQ,kBAAmB,UAAW,IAAKJ,EAAA,cAC7EA,EAAA,OAAKC,MAAM,aAAaL,GACpB,EAIV,MAAMS,EAAazG,I,MACjB,OACEoG,EAAA,OAAKC,MAAO,YAAYrG,EAAQ+F,SAAW,iBACzCK,EAAA,UAAQC,MAAM,UACZD,EAAA,OAAKM,KAAMf,IAAK,MAALA,SAAK,SAALA,EAAOgB,SAAU,8DAE9BP,EAAA,OAAKE,YAAYC,EAAAvG,EAAQ4F,WAAO,MAAAW,SAAA,SAAAA,EAAEC,QAAQ,kBAAmB,UAAW,IAAKJ,EAAA,cAC7EA,EAAA,OAAKC,MAAM,aAAaL,GACpB,EAIV,OAAOF,IAAW,KAChBW,EAAU,CAAEd,QAAOC,UAASC,OAAMC,SAAQC,YAC1CI,EAAY,CAAER,QAAOC,UAASC,OAAMC,SAAQC,WAAU,EAG1D,MAAMa,EAA+C,EAAGjB,QAAOkB,cAE3DT,EAAA,OAAKC,MAAM,oBACPQ,EAASC,KAAK9G,GACdoG,EAACV,EAAO,CACNC,MAAOA,EACPC,QAAS5F,EAAQ4F,QACjBC,KAAM7F,EAAQ6F,KACdC,OAAQ9F,EAAQ8F,OAChBC,QAAS/F,EAAQ+F,aAM3B,MAAMgB,EAAU,IAAIrD,EAAoB,CACtCO,IAAK,8CACLD,QAAS,W,MAQEgD,EAAa,M,uFAqKxB5G,KAAA6G,eAAkBJ,GAEdT,EAACQ,EAAQ,CAACC,SAAUA,EAAUlB,MAAOvF,KAAK8G,QAItC9G,KAAA+G,kBAAoC,K,mKAvIb,G,aACJ,G,iBACK,K,qBAGhC,uBAAMC,G,MACJhH,KAAKiH,QAAUjH,KAAKiH,SAAWlC,IAC/B,MAAMmC,EAAanC,IAEnB/E,KAAKkE,mBAAqBE,EAAiBC,kBAAkBrE,KAAKmH,UAElE,MAAMC,EAA4B,CAChCC,GAAIrH,KAAKiH,QACTK,SAAUtH,KAAKuH,WACfC,OAAQxH,KAAKiH,QACbQ,QAASzH,KAAKyH,SAAW,GACzBhB,SAAU,CAAC,CAAEY,GAAIH,EAAW1B,QAASxF,KAAK0H,WAAa,QAGzD1H,KAAK2H,SAASC,KAAK,CACjBP,GAAIH,EACJ1B,QAASV,UACTW,KAAM,IAAIoC,KACVlC,QAAS,KACTD,OAAQ,OAGV,MAAKS,EAAAnG,KAAK8G,SAAK,MAAAX,SAAA,SAAAA,EAAErG,MAAM,CACrBE,KAAK8G,YAAcH,EAAQnD,SAASxD,KAAKuH,W,CAE/CnE,QAAQ0E,KAAK,aAAc9H,KAAK8G,OAC5B,MAAM5F,QAAiByF,EAAQ7C,YAAYsD,GAE3CpH,KAAK2H,SAASC,KAAK,CACjBP,GAAIH,EACJ1B,QAAStE,EACTuE,KAAM,IAAIoC,KACVlC,QAAS,MACTD,OAAQ,OAGV1F,KAAK+H,YAAc,K,CAGrB,kBAAAC,GACEhI,KAAKiI,SAAS,K,CAIhB,WAAAC,CAAYC,GACV,MAAMvI,EAAUuI,EAAMC,OAEtBpI,KAAK+H,YAAc,KAEnB/H,KAAK2H,SAASC,KAAInF,OAAAC,OAAA,GACb9C,IAGL,MAAMsH,EAAYnC,IAElB/E,KAAK2H,SAASC,KAAK,CACjBP,GAAIH,EACJzB,KAAM,IAAIoC,KACVlC,QAAS,KACTD,OAAQ,OAGV,MAAM0B,EAA4B,CAChCC,GAAIrH,KAAKiH,QACTK,SAAUtH,KAAKuH,WACfC,OAAQxH,KAAKiH,QACbQ,QAASzH,KAAKyH,SAAW,GACzBhB,SAAU,CAAAhE,OAAAC,OAAA,CAAE2E,GAAIH,GAActH,KAGhC+G,EAAQ7C,YAAYsD,GACjBiB,MAAMnH,IACLlB,KAAK2H,SAASC,KAAK,CACjBP,GAAIH,EACJ1B,QAAStE,EACTuE,KAAM,IAAIoC,KACVlC,QAAS,MACTD,OAAQ,OAGV1F,KAAK+H,YAAc,KAAK,IAEzBO,OAAOvH,IACNqC,QAAQrC,MAAMA,EAAM,G,CAK1B,eAAAwH,CAAgBJ,GACd,MAAMvI,EAAUuI,EAAMC,OAEtBpI,KAAKyG,SAAW,IACXzG,KAAKyG,SAAS+B,QAAOC,GAAQA,EAAKpB,KAAOzH,EAAQyH,KACpDzH,E,CAKJ,aAAA8I,CAAcC,GACZ,GAAIA,EAAG/G,MAAQ,UAAY5B,KAAK+H,YAAY,CAC1C/H,KAAK4I,WAAWD,E,EAIpB,UAAAC,CAAWT,GACTA,EAAMU,iBAEN,IAAK7I,KAAKwF,QAAS,OAEnBxF,KAAK8I,KAAKlB,KAAK,CACbP,GAAItC,IACJS,QAASxF,KAAKwF,QACdC,KAAM,IAAIoC,KACVlC,QAAS,MACTD,OAAQ,SAGV1F,KAAKwF,QAAU,E,CAGjB,YAAAuD,CAAaZ,GACXnI,KAAKwF,QAAW2C,EAAMa,OAA4BpI,K,CAWpD,QAAAqH,CAASgB,GACP,GAAIjJ,KAAK+G,kBAAmB,CAC1B/G,KAAK+G,kBAAkBmC,SAAS,CAC9BC,IAAKnJ,KAAK+G,kBAAkBqC,aAC5BC,SAAU,U,EAKhB,MAAAC,G,UACE,OACEtD,EAAA,OAAApE,IAAA,2CAAKqE,MAAM,QACTD,EAAA,OAAApE,IAAA,2CAAKqE,MAAM,cACTD,EAAA,MAAApE,IAAA,8CAAMuE,EAAAnG,KAAK8G,SAAK,MAAAX,SAAA,SAAAA,EAAErG,OAAQ,OAC1BkG,EAAA,MAAApE,IAAA,8CAAM2H,EAAAvJ,KAAK8G,SAAK,MAAAyC,SAAA,SAAAA,EAAEC,cAAe,gBACjCxD,EAAA,UAAApE,IAAA,2CAAQqE,MAAM,UACZD,EAAA,OAAApE,IAAA,2CAAK0E,MAAMmD,EAAAzJ,KAAK8G,SAAK,MAAA2C,SAAA,SAAAA,EAAElD,SAAU,+DAGrCP,EAAA,OAAApE,IAAA,2CAAKqE,MAAM,WAAWyD,IAAMC,GAAM3J,KAAK+G,kBAAoB4C,GACvD3J,KAAK6G,eAAe7G,KAAKyG,WAE7BT,EAAA,OAAApE,IAAA,2CAAKqE,MAAM,eACTD,EAAA,YAAApE,IAAA,2CACEgI,OAAO,OACPhJ,MAAQZ,KAAKwF,QACbqE,QAAW1B,GAAUnI,KAAK+I,aAAaZ,GACvClC,MAAM,gBACN6D,YAAe9J,KAAiB,aAAIA,KAAKkE,aAAa,oBAAsB,4BAE9E8B,EAAA,UAAApE,IAAA,2CAAQmI,SAAW/J,KAAK+H,YAAciC,KAAK,SAAS/D,MAAM,iBAAiBgE,QAAWC,GAAMlK,KAAK4I,WAAWsB,IACvGlK,KAAiB,aAAIA,KAAKkE,aAAa,eAAiB,W"}